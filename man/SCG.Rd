% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCG.R
\name{SCG}
\alias{SCG}
\title{SCG: Shape Changes by Group}
\usage{
SCG(
  Data,
  Groups,
  color = NULL,
  coord_name = NULL,
  subset = NULL,
  key = NULL,
  Mesh = NULL
)
}
\arguments{
\item{Data}{Either a p x k x n (landmarks, dimensions, observations) array or
a GMA object.}

\item{Groups}{A list object containing vectors of grouping variables.}

\item{color}{Optional vector containing the color values to be used for each group.
The number of colors should be equivalent to the longest grouping vector in the
Groups list.}

\item{coord_name}{an optional vector containing the names for each landmark
in the landmark configuration.}

\item{subset}{An optional vector specifying the subset or group names associated
with each landmark in the landmark configuration. If provided, the resulting
interactive figure will allow toggling between these landmark subsets.}

\item{key}{an optional character string indicating the name of a folder
either to be created or already exists in the working directory where generated
files can be stored.}

\item{Mesh}{an optional 3D mesh file (.ply format), preferably the center shape
of the landmark array, to be thin plate spline warped into the group mean shapes.}
}
\value{
A folder titled "Shape Differences Between Groups" in the working
directory. This folder will contain plotly objects for each group vector in the
Groups argument list. If a mesh object is provided, the function will also store
warped meshes for each group value in the grouping vector.
\itemize{
\item{Plotly object for grouping vector 1}
\item{Plotly object for grouping vector 2}
\item{Plotly object for grouping vector...i}
\item{Optional PLY Mesh object for grouping vector 1}
\item{Optional PLY Mesh object for grouping vector 2}
}
}
\description{
This function takes a landmark configuration and a list of
grouping variables, calculating each group mean shape for each grouping vector
in the list. Then, the function automatically compiles each of the group mean
shapes together into a single interactive visualization as an html file stored
in the working directory.
}
\details{
This function accepts either a p x k x n (landmarks, dimensions, observations)
array or a GMA function output. The "Groups" argument should be a list object
with one or more vectors. The function will then iterate through each grouping
vector in the list and calculate the group mean shapes for each group in the
grouping vector.

This function allows Grouping vectors to take on character or numeric values.
If a vector of numeric values is provided, the minimum and maximum values
will be calculated as the "group mean shape".

If a 3D mesh is supplied, the landmark array should also be 3D. When a 3D
mesh object is supplied, the mesh will be warped using the thin plate spline
technique into each group mean shape. Specifically, this function calls the
warpRefMesh function from the geomorph package to warp mesh objects to the
group mean shape.

Subsequently, the function combines each of the group shape means into a single,
interactive plot for each grouping variable in the Groups list. These plots
are then saved as HTML files in the specified directory. If no string is
provided to the argument "key," the function will store these plots in a
folder within the working directory called "Shape Differences Between Groups".

Interactive visualization plots are generated using the plotly function
from the plotly package.
}
\examples{
\dontrun{
# Scenario:
# Identify the mandibular corpus shape differences by skeletal collection.
# Identify the mandibular corpus shape differences by mean cortical area

# Import the sample dataset Corpus_Land

data(Corpus_Land)

# Import the sample dataset Biomechanics

data(Biomechanics)

# Create a list of grouping vectors for the variables Collection and Cortical Area (CA)

Groups = list(Collection = Biomechanics[1:119,]$Collection,
              'Cortical Area' = Biomechanics \%>\%
                                  group_by(ID) \%>\%
                                    summarise(CA = mean(CA))

              )

# Perform generalized procrustes analysis on the landmark array

gpa_coords = gpagen(Corpus_Land)

# Conduct the SCG analysis

SCG(gpa_coords # landmark array
    Groups # list of grouping vectors
    ) # all other arguments are optional. Colors are generated automatically.
}

}
\seealso{
\code{\link[=plotly() warpRefMesh]{plotly() warpRefMesh()}}
}
