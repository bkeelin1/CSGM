% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{NComp}
\alias{NComp}
\title{Calculate best number of latent variables for a Partial Least Squares Analysis}
\usage{
NComp(
  model,
  method = "onesigma",
  vip_method = "spls",
  cv_type = "CV",
  scale = FALSE,
  center = FALSE,
  folds = 5,
  max_comps = 10,
  repeats = 25,
  nperm = 1000,
  alpha = 0.01,
  plot = FALSE,
  save.plot = FALSE,
  parallel.me = FALSE
)
}
\arguments{
\item{model}{List object containing response and predictor data in a model format:
model$model[\link{1}] = Response data
model$model[\link{2}] = Predictor data}

\item{method}{Character string specifying component selection method:
\itemize{
\item{"onesigma":    Selects simplest model within one standard error of minimum RMSEP}
\item{"randomization":   Uses permutation testing to assess component significance}
}}

\item{vip_method}{Character string specifying PLS method:
\itemize{
\item{"plsr2":   Two-block PLS via plsdepot}
\item{"pls":   Standard PLS via pls package}
\item{"spls":    Sparse PLS via mixOmics}
}}

\item{cv_type}{Character string specifying cross-validation type:
\itemize{
\item{"CV":    k-fold cross-validation}
\item{"LOO":   Leave-one-out cross-validation}
}}

\item{scale}{Logical value indicating whether to scale variables}

\item{center}{Logical value indicating whether to center variables}

\item{folds}{Integer specifying number of cross-validation folds}

\item{max_comps}{Integer specifying maximum number of components to evaluate}

\item{repeats}{Integer specifying number of cross-validation repetitions}

\item{nperm}{Integer specifying number of permutations for randomization test}

\item{alpha}{Numeric value specifying significance level for randomization test}

\item{plot}{Logical value indicating whether to generate diagnostic plots}

\item{save.plot}{Logical value indicating whether to save diagnostic plots}
}
\value{
A list containing:
\itemize{
\item{ncomp:   Optimal number of components}
\item{plot:    If plot=TRUE, diagnostic plot showing RMSEP vs components}
}
}
\description{
A function designed to identify the optimal number of latent variables (components)
in Partial Least Squares analysis by evaluating model performance through cross-validation.
This function supports multiple PLS methods and implements both one-sigma and
randomization approaches for component selection. It optimizes component selection
by maximizing predictive power (Q2) while minimizing prediction error (RMSEP),
making it particularly useful for high-dimensional biological data analysis.
}
\details{
NComp implements a systematic approach to determining the optimal number of
components in PLS analysis. For the one-sigma method (method="onesigma"), it
identifies the simplest model whose Root Mean Square Error of Prediction (RMSEP)
is within one standard error of the minimum RMSEP. This approach balances model
complexity against predictive power.

For the randomization method (method="randomization"), the function performs
permutation testing to assess the significance of each additional component.
Components are retained until their contribution becomes non-significant at the
specified alpha level.

Cross-validation is implemented through either k-fold (cv_type="CV") or
leave-one-out (cv_type="LOO") approaches. For k-fold cross-validation, the
function performs multiple repetitions to ensure stable estimates. Model
performance is assessed through both Q2 (predictive power) and RMSEP
(prediction error) statistics.

The function adapts its approach based on the specified vip_method. For plsr2,
it handles two-block PLS specifically. For spls, it incorporates variable
selection considerations. The function also supports standard PLS implementations
through the pls package.

When plot=TRUE, the function generates diagnostic plots showing RMSEP across
different numbers of components, with the selected optimal number clearly marked.
}
\examples{
\dontrun{
# Example: Determine optimal number of components for analyzing relationship
# between symphyseal shape and biomechanical properties

# Prepare data
Response <- Corpus_Land[241:360,,]  # Symphysis landmarks
Predictor <- Biomechanics \%>\%
  filter(Region == "LM1M2") \%>\%
  select(5:93)  # Biomechanical variables

# Create model structure
model <- list(
  model = list(
    Response,
    Predictor
  )
)

# Find optimal number of components using one-sigma method
ncomp_onesig <- NComp(
  model = model,
  method = "onesigma",
  vip_method = "plsr2",
  cv_type = "CV",
  folds = 5,
  repeats = 20,
  plot = TRUE
)

# Find optimal number of components using randomization
ncomp_rand <- NComp(
  model = model,
  method = "randomization",
  vip_method = "plsr2",
  cv_type = "CV",
  folds = 5,
  repeats = 20,
  nperm = 500,
  plot = TRUE
)

# Compare results
print(paste("One-sigma components:", ncomp_onesig$ncomp))
print(paste("Randomization components:", ncomp_rand$ncomp))
}
}
\references{
Wold, S., Johansson, E., & Cocchi, M. (1993). PLS: Partial Least Squares Projections
to Latent Structures. 3D QSAR in Drug Design, 1, 523-550.

Mevik, B. H., & Wehrens, R. (2007). The pls Package: Principal Component and
Partial Least Squares Regression in R. Journal of Statistical Software, 18(2), 1-24.
}
\seealso{
\code{\link{Bio.VIP}} \code{\link{AABA}}
}
\author{
Brian Anthony Keeling
}
