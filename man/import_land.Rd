% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_land.R
\name{import_land}
\alias{import_land}
\title{Import and Process Landmark Data from Various File Formats}
\usage{
import_land(
  directory,
  pattern = "\\\\.csv$",
  format = "dragonfly",
  dims = 3,
  curve_names = NULL,
  folders = NULL
)
}
\arguments{
\item{directory}{Path to the directory containing landmark files or folders containing landmark files}

\item{pattern}{File pattern to match (e.g., "\\.csv", "\\.tps")}

\item{format}{Character string specifying the file format. One of "dragonfly",
"tps", "morphologika", "nts", "avizo", "mimics", or "simple_csv"}

\item{dims}{Integer specifying dimensions (2 or 3)}

\item{curve_names}{Optional for Dragonfly file formats only. Which specific landmark curve names be extracted?}
}
\value{
A list containing:
\itemize{
\item landmarks: A single p x k x n array of all landmarks and individuals Wcombined
}
}
\description{
Imports landmark data from various common formats used in geometric morphometrics
and medical imaging. Supports multiple file formats including Dragonfly, TPS,
Morphologika, NTS (Viewbox), Avizo, Mimics, and CSV files. Can handle both
2D and 3D landmarks and provides options for processing curves and contours.

\itemize{Supported file formats:
\item {dragonfly        Dragonfly landmark export format}
\item {tps:             TPS file format}
\item {morphologika:    Morphologika format}
\item {nts:             Viewbox/Checkpoint NTS format}
\item {avizo:           Avizo landmark ASCII format}
\item {mimics:          Mimics Medical landmark format}
\item {simple_csv:      Simple CSV with coordinates and optional landmark names}
}
}
\details{
This function provides a unified interface for mass importing landmark data
from various directory folders and file formats commonly used in
geometric morphometrics. It accepts both 2D and 3D landmark data and
provides options for processing separate curves or contours.

This function also allows for a simple CSV format, the function expects either
pure coordinate data (x,y,z) or coordinates with landmark names listed in the
first column. The coordinate columns can be customized using the coord_names parameter.
}
\examples{
\dontrun{
# Import Dragonfly landmarks with curves

landmarks <- import_land(
  directory = path = file.path(.libPaths("CSGM"), "CSGM", "Example", "Dragonfly"), # CSGM library path
  pattern = "\\\\.csv$",
  format = "dragonfly",
  dims = 3,
  curve_names = c("LE","BE","LI","BI")
)

# Import Avizo files
landmarks <- import_land(
  directory = path = file.path(.libPaths("CSGM"), "CSGM", "Example", "Avizo"),
  pattern = "\\\\.landmarkAscii$",
  format = "avizo",
  dims = 3
)

# Import Mimics files
landmarks <- import_land(
  directory = path = file.path(.libPaths("CSGM"), "CSGM", "Example", "Mimics"),
  pattern = "\\\\.csv$",
  format = "mimics",
  dims = 3
)

# Import simple CSV with landmark names
landmarks <- import_land(
  directory = path = file.path(.libPaths("CSGM"), "CSGM", "Example", "Excel"),
  pattern = "\\\\.csv$",
  format = "simple_csv",
  dims = 3,
)

# Import TPS files
landmarks <- import_land(
  directory = path = file.path(.libPaths("CSGM"), "CSGM", "Example", "TPS"),
  pattern = "\\\\.tps$",
  format = "tps",
  dims = 3
)

# Import NTS files
landmarks <- import_land(
  directory = path = file.path(.libPaths("CSGM"), "CSGM", "Example", "NTS"),
  pattern = "\\\\.nts$",
  format = "tps",
  dims = 3
)
}
}
\seealso{
\code{\link{landmarks_to_array}}
}
