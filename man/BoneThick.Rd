% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BoneThick.R
\name{BoneThick}
\alias{BoneThick}
\title{BoneThick - Calculate Bone Thicknesses with Landmark Coordinates}
\usage{
BoneThick(External, Internal, Points, k, Spec_ID = NULL, Row_ID = FALSE)
}
\arguments{
\item{External}{A landmark object as a \link{p x k x n} array (landmarks, dimensions, observations), \link{n x p} 2D matrix or data frame of the external cortical surface.}

\item{Internal}{A landmark object as a \link{p x k x n} array (landmarks, dimensions, observations), \link{n x p} 2D matrix or data frame of the internal cortical surface.}

\item{Points}{A numeric value representing the total number of landmark points in  you have in a single individual specimen landmark configuration.}

\item{k}{A numeric value indicating the number of landmark dimensions. Only accepts 2 or 3.}

\item{Spec_ID}{An optional vector containing the identifying labels for each observation.}

\item{Row_ID}{An optional logical value indicating whether the External or Internal arguments is a data frame with the first row (not column names) consisting of data column names.}
}
\value{
An n x p dataframe with the row names identified by Spec_ID which contains landmark euclidean distances between the external and internal surfaces.
}
\description{
BoneThick calculates the cortical bone thicknesses of any bone, provided that
the landmarks are in a configuration where the external and internal landmarks
are sequentially paired in some manner.
}
\details{
This function takes two inputs: (1) an External landmark configuration as either
an \link{p x k x n} array (landmarks, dimensions, observations), \link{n x p} 2D matrix
or data frame, and (2) an Internal landmark configuraiton in the same configuration.
If the landmark shape data is in a dataframe, there are three options for its
organization: (1) a dataframe where columns represent a sequence of landmarks
and rows represent the individual specimens, (2) a dataframe where the rows
represent all of the landmarks (x1,y1,z1,x2,y2,z2) and each column a specimen,
or a 2D or 3D array, or (4) the dataframe consists of a .morphologika, .tps, o
r .dat format where three columns designates the X, Y, and Z landmark position
and consists of all landmarks in a configuration grouping all individuals in
these three columns. The function will take both of these configurations and
sequentially calculate the euclidean distances between the external and internal
landmarks to calculate bone thicknesses. Landmarks should be converted either
before the analysis or after to a millimeter scale to ensure meaningful results.
}
\examples{
\dontrun{

# Scenario: Calculate the Cortical bone thicknesses of the mandibular symphysis

# Load in the Corpus_Land dataset
data(Corpus_Land)

# Isolate the External and Internal Symphysis
# Symphysis landmarks in Corpus_Land = 241:360

External_Symphysis = Corpus_Land[241:300,,]
Internal_Symphysis[301:360,,]

# Calculate the Bone Thicknesses
Thicknesses = BoneThick(External_symphysis, # External landmarks
                        Internal_symphysis, # Internal landmarks
                        Points = 60, # There are 60 semilandmarks along the external and internal symphyseal bone contour
                        k = 3, # three dimensions
                        Spec_ID = dimnames(Corpus_Land)[[3]]
                        Row_ID = FALSE # The landmark configurations are arrays not data tables
                        )

# View the Thicknesses as a thickness plot

Mean_Thicness = colMeans(Thicknesses) \%>\%
                  pivot_longer(cols = everything(), names_to = "Point",
                                values_to = "Thickness") \%>\%
                  mutate(ID = rep(dimnames(Corpus_Land)[[3]], each = 60))

Thickness_long = Thicknesses \%>\%
                  pivot_longer(cols = everything(), names_to = "Point",
                                values_to = "Thickness") \%>\%
                  mutate(ID = rep(dimnames(Corpus_Land)[[3]], each = 60)) \%>\%

ggplot(Thicknesses, aes(x = Point, y = Thickness)) +
  geom_line(aes(color = ID)) +
  geom_line(data = Mean_Thickness, aes(x = Point, y = Thickness, color = "Black"), size = 5) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 5)) +  # Rotate x-axis labels
  labs(title = "Bone Thickness Across Different Measurement Points", x = "Semilandmark Point", y = "Thickness (mm)") +
  ggpubr::theme_pubclean()

}
}
\author{
Brian Anthony Keeling
}
